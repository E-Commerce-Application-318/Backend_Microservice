server:
  port: 8084
spring:
  datasource:
    url: jdbc:h2:mem:order_db
  h2:
    console:
      enabled: true
      path: /h2-console
  sql:
    init:
      mode: always # Always run initialization scripts
      data-locations: classpath:data.sql
      continue-on-error: false
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create-drop # Recreate tables and data on each restart
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    defer-datasource-initialization: true # Ensure tables are created before data.sql runs
  cloud:
    stream:
      bindings:
        # publisher
        orderCreatedChannel:
          destination: order-created
        orderCancelledChannelRestock:
          destination: order-cancelled-restock
        orderCancelledEventRefund:
          destination: order-cancelled-refund
        paymentProcessChannel:
          destination: order-payment-processed
        # consumer
        receivedPaymentStatusEvent-in-0:
          destination: order-status-updated
      kafka:
        binder:
          brokers: localhost:9092
    function:
      definition: receivedPaymentStatusEvent

services:
  cart:
    base-url: http://localhost:8085/cart
  product:
    base-url: http://localhost:8082/product
  auth:
    base-url: http://localhost:8081/auth